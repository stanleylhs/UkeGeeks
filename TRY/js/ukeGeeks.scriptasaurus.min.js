/**
  * <ul>
  * <li>Project: UkeGeeks' Scriptasaurus</li>
  * <li>Version: 1.2</li>
  * <li>Homepage: http://ukegeeks.com</li>
  * <li>Project Repository: https://github.com/buzcarter/UkeGeeks</li>
  * <li>Author: Buz Carter</li>
  * <li>Contact: buz@ukegeeks.com</li>
  * <li>Copyright: Copyright 2010-2013 Buz Carter.</li>
  * <li>License GNU General Public License (http://www.gnu.org/licenses/gpl.html)</li>
  * <ul>
  *
  * <p>== Overview
  * <p>Reads marked-up music (lyrics + chords) extracting all of the chords used;
  * Generates a chord diagrams using HTML5 &lt;canvas&gt; and rewrites the music with
  * standard HTML wrapping the chords.
  *
  * @module  scriptasaurus
  * @namespace  ukeGeeks
  */
var ukeGeeks = window.ukeGeeks || {};

;ukeGeeks.definitions=new function(){var _userChords=[];var _chords=[];var _instruments=[];var _offset=0;var _map=[];this.instrument={sopranoUke:0,baritoneUke:7};this.addInstrument=function(text){_instruments.push(text);};this.useInstrument=function(offset){var offset=(arguments.length>0)?arguments[0]:this.instrument.sopranoUke;_offset=parseInt(offset);if(_offset>0){_map=ukeGeeks.transpose.retune(_offset);}
this.setChords(ukeGeeks.chordImport.runBlock(_instruments[0]).chords);};this.get=function(chordName){for(var i=0;i<_userChords.length;i++){if(chordName==_userChords[i].name){return _userChords[i];}}
if(_offset<1){return _get(chordName);}
else{for(var i in _map){if(chordName==_map[i].original){var x=_get(_map[i].transposed);if(x){var chrd=new ukeGeeks.data.expandedChord(chordName);chrd.dots=x.dots;return chrd;}}}}
return null;};var _subs={'A#':'Bb','Db':'C#','D#':'Eb','Gb':'F#','Ab':'G#'};var _get=function(chordName){var n=chordName.substr(0,2);var s=_subs[n];if(s){var c=_get(s+chordName.substr(2));if(!c){return null;}
var chrd=new ukeGeeks.data.expandedChord(chordName);chrd.dots=c.dots;return chrd;}
for(var i=0;i<_chords.length;i++){if(chordName==_chords[i].name){return _chords[i];}}
return null;};this.add=function(data){if(data.length){for(var i=0;i<data.length;i++){_userChords.push(data[i]);}}
return _userChords.length;};this.replace=function(data){_userChords=[];return this.add(data);};this.getChords=function(){return _chords;};this.setChords=function(value){_chords=value;};};
;ukeGeeks.settings=new function(){this.fonts={dot:'9pt Arial Black,Arial',text:'bold 14pt Arial',fret:'bold 13pt Arial'};this.colors={fretLines:'#003366',dots:'#ff0000',dotText:'#ffffff',text:'#000000',fretText:'#4a4a4a',xStroke:'#444444'};this.fretBox={showText:true,height:150,width:100,fretSpace:20,stringSpace:20,dotRadius:8,lineWidth:1.6,topLeftPos:{x:22,y:25},xWidth:0.45*20,xStroke:1.6*1.6};this.inlineFretBox={showText:false,height:50,width:40,fretSpace:9,stringSpace:7,dotRadius:3,lineWidth:1,topLeftPos:{x:3,y:2},xWidth:0.7*7,xStroke:1.4*1};this.ids={songText:'ukeSongText',canvas:'ukeChordsCanvas',container:'ukeSongContainer'};this.wrapClasses={wrap:'ugs-song-wrap',diagrams:'ugs-diagrams-wrap',text:'ugs-source-wrap'};this.opts={columnsEnabled:true,retainBrackets:true,ignoreCommonChords:false,autoFixOverlaps:true};this.inlineDiagrams=false;this.numFrets=5;this.tuning=['G','C','E','A'];this.defaultInstrument=ukeGeeks.definitions.instrument.sopranoUke;this.tabs={lineSpacing:16,noteSpacing:14,lineWidth:1,lineColor:'#999999',labelWidth:12,labelFont:'10pt Arial, Helvetica, Verdana, Geneva, sans-serif',dotColor:'#eaeaea',dotRadius:10,textFont:'bold 12pt Arial, Helvetica, Verdana, Geneva, sans-serif',textColor:'#000000',bottomPadding:10};this.environment={isIe:false};this.commonChords=['A','B','C','D','E','F','G','Am'];var _scaleNode=function(node,mulitplier){if(typeof(node)=='number'){return node*mulitplier;}
else if(typeof(node)=='object'){for(var i in node){node[i]=_scaleNode(node[i],mulitplier);}
return node;}
return node;};var sizeRe=/\b(\d+)(pt|px)\b/;var _scaleFont=function(font,mulitplier){var bits=font.match(sizeRe);if(bits.length<2){return font;}
var size=parseInt(bits[1])*mulitplier;return font.replace(sizeRe,size+bits[2]);};this.scale=function(mulitplier){if(mulitplier==1.0){return;}
for(var i in this.fonts){this.fonts[i]=_scaleFont(this.fonts[i],mulitplier);}
this.fretBox=_scaleNode(this.fretBox,mulitplier);};};
;ukeGeeks.data=new function(){this.expandedChord=function(name){this.name=name;this.dots=[];this.muted=[];};this.song=function(){this.title='';this.album='';this.artist='';this.st='';this.st2='';this.body='';this.hasChords=false;this.ugsMeta=[];this.defs=[];this.chords=[];};this.dot=function(string,fret,finger){this.string=string;this.fret=fret;this.finger=finger;};this.instrument=function(key,name,tuning,chords){this.key=key;this.name=name;this.tuning=tuning;this.chords=chords;};this.htmlHandles=function(wrap,diagrams,text){this.wrap=wrap;this.diagrams=diagrams;this.text=text;};}
;ukeGeeks.toolsLite=new function(){var regEx={dbleSpace:/\s{2,}/g,trim:/^\s+|\s+$/g};this.addClass=function(element,className){if(!this.hasClass(element,className)){element.className+=' '+className;}};this.hasClass=function(element,className){return element.className.match(getRegEx(className));};this.removeClass=function(element,className){if(this.hasClass(element,className)){var reg=getRegEx(className);element.className=element.className.replace(reg,' ');}};this.setClass=function(element,className,isActive){if(isActive){this.addClass(element,className);}
else{this.removeClass(element,className);}};var getRegEx=function(className){return new RegExp('(\\s|^)'+className+'(\\s|$)');};this.trim=function(str){return str.replace(regEx.trim,'');};this.pack=function(value){return value.replace(regEx.dbleSpace,' ').replace(regEx.trim,'');};this.getElementsByClass=function(searchClass,node,tag){if(node==null){node=document;}
if(node.getElementsByClassName){return node.getElementsByClassName(searchClass);}
var classElements=new Array();if(tag==null){tag='*';}
var els=node.getElementsByTagName(tag);var elsLen=els.length;var pattern=new RegExp("(^|\\s)"+searchClass+"(\\s|$)");for(i=0,j=0;i<elsLen;i++){if(pattern.test(els[i].className)){classElements[j]=els[i];j++;}}
return classElements;};};
;ukeGeeks.chordImport=new function(){var chordParts=function(definition,addIns){this.define=definition;this.adds=addIns;};var regEx={define:/\s*{?define\s*:(.*?)(}|add:)/i,add:/(add:.*?)(}|add:)/i,name:/(\S+)\s+/,frets:/\s+frets\s+([\dx]{4}|(([\dx]{1,2}\s){3})[\dx]{1,2})/i,fingers:/\s+fingers\s+((\d\s+){3}\d|\d{4})/i,muted:/\s+mute\s+(\d\s){0,3}\d?/i,addin:/add:\s*string\s*(\S+)\s+fret\s+(\d+)\sfinger\s(\d)/i,instr:/{\s*instrument\s*:\s*(.*?)\s*}/i,tuning:/{\s*tuning\s*:\s*(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s*}/i,numOrX:/(\d{1,2}|x)/gi,any:/(.)/g};var _lineToParts=function(line){var s=ukeGeeks.toolsLite.pack(line);if(s.length>1&&s[0]!='#'){var m=s.match(regEx.define);if(m&&m.length>1){return new chordParts(m[1],_getAddIns(s));}}
return null;};var _textToParts=function(lines){var p=[];for(var i in lines){var c=_lineToParts(lines[i]);if(c){p.push(c);}}
return p;};var _getAddIns=function(txt){var finds=[];var m=txt.match(regEx.add);while(m&&m.length>1){finds.push(m[1]);txt=txt.replace(m[1],'');m=txt.match(regEx.add);}
return finds;};var _getInstrument=function(text){var c=text.match(regEx.instr);if(!c){return null;}
return ukeGeeks.toolsLite.pack(c[1]);};var _getTuning=function(text){var c=text.match(regEx.tuning);if(!c){return null;}
return[c[1],c[2],c[3],c[4]];};var _getName=function(text){var c=text.match(regEx.name);if(!c){return null;}
return c[1];};var _getKey=function(name,tuning){var s=name.replace(' ','-');for(var i in tuning){s+='-'+tuning[i];}
return s.toLowerCase();};var _fretOMatic=function(text,frets,muted){var f=text.match(regEx.frets);if(!f){return;}
var m=(f[1].length==4)?f[1].match(regEx.any):f[1].match(regEx.numOrX);for(var i=0;i<m.length;i++){var isX=m[i]=='x'||m[i]=='X';frets[i]=isX?0:parseInt(m[i]);muted[i]=isX;}};var _getFingers=function(text){var f=text.match(regEx.fingers);if(!f){return[];}
var x=f[1];if(x.length==4){x=x.replace(regEx.any,'$1 ');}
return x.split(' ');};var _toDots=function(frets,fingers){var dots=[];var tuning=ukeGeeks.settings.tuning;for(var j=0;j<tuning.length;j++){var n=parseInt(frets[j]);if(n>0){dots.push(new ukeGeeks.data.dot(j,n,(fingers.length-1>=j)?parseInt(fingers[j]):0));}}
return dots;};var _addInDots=function(dots,adds){if(!adds||adds.length<1){return;}
for(var i in adds){var a=adds[i].match(regEx.addin);if(a&&a.length>2){dots.push(new ukeGeeks.data.dot(parseInt(a[1])-1,parseInt(a[2]),parseInt(a[3])));}}};var _getExpandedChord=function(text,adds){var frets=[];var muted=[];_fretOMatic(text,frets,muted);var name=_getName(text);var fingers=_getFingers(text);if(name==null||name=='frets'){_log('bad "define" instruction: chord name not found: '+text);return null;}
if(frets==null){_log('bad "define" instruction: frets not found: '+text);return null;}
var chrd=new ukeGeeks.data.expandedChord(name);var dots=_toDots(frets,fingers);_addInDots(dots,adds);chrd.dots=dots;chrd.muted=muted;return chrd;};var _partsToChords=function(parts){var c=[];var x=null;for(var i in parts){x=_getExpandedChord(parts[i].define,parts[i].adds);if(x){c.push(x);}}
return c;};var _log=function(msg){_errs.push(msg);}
var _errs=[];var _echoLog=function(){for(var i in _errs){console.log(i+'. '+_errs[i]);}};this.runLine=function(line){var c=_lineToParts(line);if(!c){return null;}
return _getExpandedChord(c.define,c.adds);};this.runBlock=function(text){var nL=text.split('\n');if(nL.length<2){nL=text.split('{');}
var parts=_textToParts(nL);var n=_getInstrument(text);var t=_getTuning(text);return new ukeGeeks.data.instrument(_getKey(n,t),n,t,_partsToChords(parts));};}
;ukeGeeks.transpose=new function(){var re=/^([A-G][#b]?)(.*)/;var tones={'A':0,'A#':1,'Bb':1,'B':2,'C':3,'C#':4,'Db':4,'D':5,'D#':6,'Eb':6,'E':7,'F':8,'F#':9,'Gb':9,'G':10,'G#':11,'Ab':11};this.shift=function(name,steps){var t=getTone(name);if(t==null){return null;}
var tone=t.tone+steps;if(tone>11){tone=tone-12;}
else if(tone<0){tone=tone+12;}
for(var key in tones){if(tone==tones[key]){return key+t.suffix;}}
return null;};var getTone=function(name){var m=name.match(re);if(m.length<1){return null;}
return{tone:parseInt(tones[m[1]]),prefix:m[1],suffix:m[2]};};this.transpose=function(name,steps){if(steps==0){return name;}
return'';};this.retune=function(){var offset=(arguments.length>0)?arguments[0]:0;var chords=ukeGeeks.definitions.getChords();var s=[];if(offset==0){for(var i in chords){s.push({original:chords[i].name,transposed:chords[i].name});}}
else{for(var i in chords){s.push({original:chords[i].name,transposed:ukeGeeks.transpose.shift(chords[i].name,offset)});}}
return s;};this.shiftChords=function(chords,steps){var newChords=[];for(var i=0;i<chords.length;i++){newChords.push(this.shift(chords[i],steps));}
return newChords;};};
;ukeGeeks.definitions.addInstrument("\
{instrument: Soprano Ukulele}\
{tuning: G C E A}\
# Ab returns G#\
# A\
{define: A frets 2 1 0 0 fingers 1 2 0 0}\
{define: Am frets 2 0 0 0 fingers 1 0 0 0}\
{define: A7 frets 0 1 0 0 fingers 0 1 0 0}\
{define: A7sus4 frets 0 2 0 0 fingers 0 2 0 0}\
{define: Am7 frets 0 0 0 0}\
{define: Adim frets 2 3 2 3 fingers 1 3 2 4}\
{define: Amaj7 frets 1 1 0 0 fingers 1 2 0 0}\
{define: A6 frets 2 4 2 4 fingers 1 3 2 4}\
{define: Asus2 frets 2 4 5 2 fingers 2 3 4 1}\
{define: Asus4 frets 2 2 0 0 fingers 1 2 0 0}\
{define: Aaug frets 2 1 1 4 fingers 2 1 1 4 add: string 1 fret 1 finger 1 add: string 4 fret 1 finger 1}\
{define: Am6 frets 2 4 2 3 fingers 1 3 1 2 add: string 2 fret 2 finger 1}\
{define: A9 frets 0 1 0 2 fingers 0 1 0 2}\
# A# retruns Bb\
# Bb\
{define: Bb frets 3 2 1 1 fingers 3 2 1 1}\
{define: Bbm frets 3 1 1 1 fingers 3 1 1 1 add: string 1 fret 1 finger 1}\
{define: Bb7 frets 1 2 1 1 fingers 1 2 1 1 add: string 2 fret 1 finger 1}\
{define: Bb7sus4 frets 1 3 1 1 fingers 1 3 1 1 add: string 2 fret 1 finger 1}\
{define: Bbm7 frets 1 1 1 1 fingers 1 1 1 1}\
{define: Bbdim frets 0 1 0 1 fingers 0 1 0 2}\
{define: Bbmaj7 frets 2 2 1 1 fingers 2 2 1 1}\
{define: Bb6 frets 0 2 1 1 fingers 0 2 1 1}\
{define: Bbm6 frets 0 1 1 1 fingers 0 1 1 1}\
{define: Bbsus2 frets 3 0 1 1 fingers 3 0 1 1}\
{define: Bbsus4 frets 3 3 1 1 fingers 3 3 1 1}\
{define: Bbaug frets 3 2 2 5 fingers 2 1 1 4 add: string 1 fret 2 finger 1 add: string 4 fret 2 finger 1}\
{define: Bb9 frets 1 2 1 3 fingers 2 1 4 3}\
{define: Bbmaj7 frets 2 2 1 1 fingers 2 2 1 1}\
{define: Bbm7-5 frets 1 1 0 1 fingers 1 2 0 3}\
# B\
{define: B frets 4 3 2 2 fingers 3 2 1 1}\
{define: Bm frets 4 2 2 2 fingers 3 1 1 1 add: string 1 fret 2 finger 1}\
{define: Bm6 frets 1 2 2 2 fingers 1 2 3 4}\
{define: B7 frets 2 3 2 2 fingers 1 2 1 1 add: string 2 fret 2 finger 1}\
{define: B7sus4 frets 2 4 2 2 fingers 1 3 1 1 add: string 2 fret 2 finger 1}\
{define: Bm7 frets 2 2 2 2 fingers 1 1 1 1}\
{define: Bdim frets 1 2 1 2 fingers 1 3 2 4}\
{define: Bmaj7 frets 3 3 2 2 fingers 2 2 1 1}\
{define: B6 frets 1 3 2 2 fingers 1 4 2 3}\
{define: Bsus2 frets 5 1 2 2 fingers 4 1 3 2}\
{define: Bsus4 frets 4 4 2 2 fingers 2 2 1 1}\
{define: Baug frets 0 3 3 2 fingers 0 2 2 1}\
{define: B9 frets 2 3 2 4}\
# C\
{define: C frets 0 0 0 3 fingers 0 0 0 3}\
{define: Cm frets 0 3 3 3 fingers 0 1 2 3}\
{define: C7 frets 0 0 0 1 fingers 0 0 0 1}\
{define: C7sus4 frets 0 0 1 1 fingers 0 0 1 1}\
{define: Cm7 frets 3 3 3 3 fingers 1 1 1 1}\
{define: Cdim frets 2 3 2 3 fingers 1 3 2 4}\
{define: Cmaj7 frets 0 0 0 2 fingers 0 0 0 1}\
{define: C6 frets 0 0 0 0}\
{define: Cm6 frets 0 3 5 5 fingers 0 1 3 1}\
{define: Csus2 frets 0 2 3 3 fingers 0 1 2 2}\
{define: Csus4 frets 0 0 1 3 fingers 0 0 1 3}\
{define: Caug frets 1 0 0 3 fingers 1 0 0 4}\
{define: C9 frets 0 2 0 1 fingers 0 2 0 1}\
# C#\
{define: C# frets 1 1 1 4 fingers 1 1 1 4 add: string 4 fret 1 finger 1}\
{define: C#m frets 1 4 4 4 fingers 1 2 3 3}\
{define: C#7 frets 1 1 1 2 fingers 1 1 1 2 add: string 4 fret 1 finger 1}\
{define: C#7sus4 frets 1 1 2 2 fingers 1 1 2 3}\
{define: C#m7 frets 1 4 4 2 fingers 1 3 3 2}\
{define: C#dim frets 0 1 0 1 fingers 0 1 0 2}\
{define: C#maj7 frets 1 1 1 3 fingers 1 1 1 3 add: string 4 fret 1 finger 1}\
{define: C#6 frets 1 1 1 1 fingers 1 1 1 1}\
{define: C#m6 frets 1 1 0 1 fingers 1 2 0 3}\
{define: C#sus2 frets 1 3 4 4 fingers 1 2 3 3}\
{define: C#sus4 frets 1 1 2 4 fingers 1 1 2 4}\
{define: C#aug frets 2 1 1 4 fingers 2 1 1 4 add: string 1 fret 1 finger 1 add: string 4 fret 1 finger 1}\
{define: C#9 frets 1 3 1 2}\
# Db returns C#\
# D\
{define: D frets 2 2 2 0 fingers 1 1 1 0}\
{define: Dm frets 2 2 1 0 fingers 2 2 1 0}\
{define: Dm6 frets 0 2 1 2 fingers 0 2 1 3}\
{define: D7 frets 2 2 2 3 fingers 1 1 1 2 add: string 4 fret 2 finger 1}\
{define: D7sus4 frets 2 2 3 3 fingers 1 1 2 3}\
{define: Dm7 frets 2 2 1 3 fingers 2 2 1 3}\
{define: Ddim frets 1 2 1 2 fingers 1 3 2 4}\
{define: Dmaj7 frets 2 2 2 4 fingers 1 1 1 2 add: string 4 fret 2 finger 1}\
{define: D6 frets 2 2 2 2 fingers 2 2 2 2}\
{define: Dsus2 frets 2 2 0 0 fingers 1 2 0 0}\
{define: Dsus4 frets 0 2 3 0 fingers 0 1 2 0}\
{define: Daug frets 3 2 2 5 fingers 2 1 1 4 add: string 1 fret 2 finger 1 add: string 4 fret 2 finger 1}\
{define: D9 frets 2 4 2 3}\
# D# returns Eb\
# Eb\
{define: Eb frets 0 3 3 1 fingers 0 2 2 1}\
{define: Ebm frets 3 3 2 1 fingers 3 3 2 1}\
{define: Eb7 frets 3 3 3 4 fingers 1 1 1 2 add: string 4 fret 3 finger 1}\
{define: Eb7sus4 frets 3 3 4 4 fingers 1 1 2 3}\
{define: Ebm7 frets 3 3 2 4 fingers 2 2 1 4}\
{define: Ebdim frets 2 3 2 3 fingers 1 3 2 4}\
{define: Ebmaj7 frets 3 3 3 5 fingers 1 1 1 2 add: string 4 fret 3 finger 1}\
{define: Eb6 frets 3 3 3 3 fingers 1 1 1 1}\
{define: Ebm6 frets 3 3 2 3 fingers 2 3 1 4}\
{define: Ebsus2 frets 3 3 1 1 fingers 2 2 1 1}\
{define: Ebsus4 frets 1 3 4 1 fingers 2 3 4 1}\
{define: Ebaug frets 0 3 3 2 fingers 0 2 2 1}\
{define: Eb9 frets 0 1 1 1}\
# E\
{define: E frets 4 4 4 2 fingers 2 3 4 1}\
{define: Em frets 0 4 3 2 fingers 0 3 2 1}\
{define: E7 frets 1 2 0 2 fingers 1 2 0 3}\
{define: E7sus4 frets 2 2 0 2 fingers 2 3 0 4}\
{define: Em6 frets 4 4 3 4 fingers 2 3 1 4}\
{define: Em7 frets 0 2 0 2 fingers 0 1 0 2}\
{define: Edim frets 0 1 0 1 fingers 0 1 0 2}\
{define: Emaj7 frets 1 3 0 2 fingers 1 3 0 2}\
{define: E6 frets 4 4 4 4 fingers 1 1 1 1}\
{define: Esus2 frets 4 4 2 2 fingers 3 3 1 1}\
{define: Esus4 frets 2 4 0 2 fingers 2 4 0 1}\
{define: Eaug frets 1 0 0 3 fingers 1 0 0 4}\
{define: E9 frets 1 2 2 2}\
# F\
{define: F frets 2 0 1 0 fingers 2 0 1 0}\
{define: Fm frets 1 0 1 3 fingers 1 0 2 4}\
{define: F7 frets 2 3 1 0 fingers 2 3 1 0}\
{define: F7sus4 frets 3 3 1 3 fingers 2 3 1 4}\
{define: Fm6 frets 1 2 1 3 fingers 1 2 1 3 add: string 2 fret 1 finger 1 add: string 4 fret 1 finger 1}\
{define: Fm7 frets 1 3 1 3 fingers 1 3 2 4}\
{define: Fdim frets 1 2 1 2 fingers 1 3 2 4}\
{define: Fmaj7 frets 2 4 1 3 fingers 2 4 1 3}\
{define: F6 frets 2 2 1 3 fingers 2 2 1 4}\
{define: Fsus2 frets 0 0 1 3 fingers 0 0 1 3}\
{define: Fsus4 frets 3 0 1 3 fingers 3 0 1 4}\
{define: F6sus2 frets 0 0 1 3 fingers 0 0 1 3}\
{define: F6sus4 frets 3 0 1 1 fingers 3 0 1 1}\
{define: F6aug frets 2 1 1 4 fingers 2 1 1 4 add: string 1 fret 1 finger 1 add: string 4 fret 1 finger 1}\
{define: F9 frets 2 3 3 3}\
{define: Faug frets 2 1 1 0 fingers 3 1 2 0}\
# F#\
{define: F# frets 3 1 2 1 fingers 3 1 2 1 add: string 1 fret 1 finger 1 add: string 3 fret 1 finger 1}\
{define: F#m frets 2 1 2 0 fingers 2 1 3 0}\
{define: F#7 frets 3 4 2 1 fingers 3 4 2 1}\
{define: F#7sus4 frets 4 4 2 4 fingers 2 3 1 4}\
{define: F#m7 frets 2 4 2 4 fingers 1 3 2 4}\
{define: F#dim frets 2 3 2 3 fingers 1 3 2 4}\
{define: F#maj7 frets 3 5 2 4 fingers 2 4 1 3}\
{define: F#m6 frets 2 1 2 4 fingers 2 1 3 4}\
{define: F#6 frets 3 3 2 4 fingers 2 2 1 4}\
{define: F#sus2 frets 1 1 2 4 fingers 1 1 2 4}\
{define: F#sus4 frets 4 1 2 2 fingers 4 1 2 3}\
{define: F#aug frets 3 2 2 5 fingers 2 1 1 4 add: string 1 fret 2 finger 1 add: string 4 fret 2 finger 1}\
{define: F#9 frets 1 1 0 1}\
# Gb returns F#\
# G\
{define: G frets 0 2 3 2 fingers 0 1 3 2}\
{define: Gm frets 0 2 3 1 fingers 0 2 3 1}\
{define: Gm6 frets 0 2 0 1 fingers 0 2 0 1}\
{define: G7 frets 0 2 1 2 fingers 0 2 1 3}\
{define: G7sus4 frets 0 2 1 3 fingers 0 2 1 4}\
{define: Gm7 frets 0 2 1 1 fingers 0 2 1 1}\
{define: Gdim frets 0 1 0 1 fingers 0 1 0 2}\
{define: Gmaj7 frets 0 2 2 2 fingers 0 1 2 3}\
{define: G6 frets 0 2 0 2 fingers 0 1 0 2}\
{define: Gsus2 frets 0 2 3 0 fingers 0 1 2 0}\
{define: Gsus4 frets 0 2 3 3 fingers 0 1 2 3}\
{define: Gaug frets 0 3 3 2 fingers 0 2 2 1}\
{define: Gsus4 frets 0 2 3 3}\
{define: G9 frets 2 2 1 2}\
# G#\
{define: G# frets 5 3 4 3 fingers 3 1 2 1 add: string 2 fret 3 finger 1 add: string 4 fret 3 finger 1}\
{define: G#m frets 1 3 4 2 fingers 1 3 4 2}\
{define: G#7 frets 1 3 2 3 fingers 1 3 2 4}\
{define: G#7sus4 frets 1 3 2 4 fingers 1 3 2 4}\
{define: G#m7 frets 1 3 2 2 fingers 1 4 2 3}\
{define: G#dim frets 1 2 1 2 fingers 1 3 2 4}\
{define: G#maj7 frets 1 3 3 3 fingers 1 2 2 3}\
{define: G#6 frets 1 3 1 3 fingers 1 3 2 4}\
{define: G#m6 frets 1 3 1 2 fingers 1 3 1 2 add: string 2 fret 1 finger 1 add: string 4 fret 1 finger 1}\
{define: G#sus2 frets 1 3 4 1 fingers 2 3 4 1}\
{define: G#sus4 frets 1 3 4 4 fingers 1 2 3 3}\
{define: G#aug frets 1 0 0 3 fingers 1 0 0 4}\
{define: G#9 frets 2 2 1 2}\
# slash chords & other oddities\
{define: C-F frets 2 0 1 3}\
{define: D/A frets 2 2 2 0}\
{define: Dm/C frets 2 2 1 3}\
{define: Fm7/C frets 1 3 1 3}\
{define: G/B frets 0 2 3 2}\
{define: G/F# frets 0 2 2 2}\
{define: G/F frets 0 2 1 2}\
{define: G7/B frets 0 2 1 2}\
");
;ukeGeeks.canvasTools=new function(){this.drawDot=function(ctx,centerPos,radius,color){ctx.beginPath();ctx.arc(centerPos.x,centerPos.y,radius,0,Math.PI*2,true);ctx.closePath();ctx.fillStyle=color;ctx.fill();};this.drawText=function(ctx,pos,text,font,color,align){if(!ctx.fillText)return;ctx.font=font;ctx.textAlign=(align||'center');ctx.fillStyle=color;ctx.fillText(text,pos.x,pos.y);};this.addCanvas=function(element,width,height){var c=document.createElement('canvas');if(!c){return null;}
if(ukeGeeks.settings.environment.isIe){c=G_vmlCanvasManager.initElement(c);}
element.appendChild(c);c.width=width;c.height=height;var ctx=c.getContext('2d');if(!ctx){return null;}
return ctx;};}
;ukeGeeks.chordBrush=function(){};ukeGeeks.chordBrush.prototype={init:function(){},plot:function(chordBox,chord,fretBox){var ctx=ukeGeeks.canvasTools.addCanvas(chordBox,fretBox.width,fretBox.height);if(ctx==null){return;}
var pos={x:fretBox.topLeftPos.x,y:fretBox.topLeftPos.y};this._drawFretboard(ctx,pos,fretBox);var centers={x:pos.x,y:(pos.y+fretBox.dotRadius)};var fudgeY=(fretBox.fretSpace-2*fretBox.dotRadius)/2;var firstFret=this._getFirstFret(chord.dots);for(var i=0;i<chord.dots.length;i++){var s=chord.dots[i].string;var p={x:(centers.x+s*fretBox.stringSpace),y:(fudgeY+centers.y+(chord.dots[i].fret-firstFret)*fretBox.fretSpace)};ukeGeeks.canvasTools.drawDot(ctx,p,fretBox.dotRadius,ukeGeeks.settings.colors.dots);if(chord.dots[i].finger>0&&fretBox.showText&&fretBox.dotRadius>4){ukeGeeks.canvasTools.drawText(ctx,{x:p.x,y:(p.y+5)},chord.dots[i].finger,ukeGeeks.settings.fonts.dot,ukeGeeks.settings.colors.dotText)}}
if(firstFret!=1){ukeGeeks.canvasTools.drawText(ctx,{x:0,y:pos.y+(0.8*fretBox.fretSpace)},firstFret,ukeGeeks.settings.fonts.fret,ukeGeeks.settings.colors.fretText,'left');ukeGeeks.canvasTools.drawText(ctx,{x:0,y:pos.y+(4.8*fretBox.fretSpace)},(firstFret+4),ukeGeeks.settings.fonts.fret,ukeGeeks.settings.colors.fretText,'left');}
if(fretBox.showText){ukeGeeks.canvasTools.drawText(ctx,{x:(pos.x+1.5*fretBox.stringSpace),y:(pos.y-5)},chord.name,ukeGeeks.settings.fonts.text,ukeGeeks.settings.colors.text);}
this._mutedStrings(ctx,fretBox,chord.muted);},_drawFretboard:function(ctx,pos,fretBox){var offset=fretBox.lineWidth/2;var stringHeight=ukeGeeks.settings.numFrets*fretBox.fretSpace;var fretWidth=3*fretBox.stringSpace;ctx.beginPath();for(var i=1;i<3;i++){var x=pos.x+i*fretBox.stringSpace+offset;ctx.moveTo(x,pos.y+offset);ctx.lineTo(x,pos.y+stringHeight+offset);}
for(var i=1;i<ukeGeeks.settings.numFrets;i++){var y=pos.y+i*fretBox.fretSpace+offset;ctx.moveTo(pos.x+offset,y);ctx.lineTo(pos.x+fretWidth+offset,y);}
ctx.rect(pos.x+offset,pos.y+offset,fretWidth,stringHeight);ctx.strokeStyle=ukeGeeks.settings.colors.fretLines;ctx.lineWidth=fretBox.lineWidth;ctx.stroke();ctx.closePath();},_mutedStrings:function(ctx,fretBox,muted){var x=fretBox.topLeftPos.x+fretBox.lineWidth/2;var y=fretBox.topLeftPos.y+fretBox.lineWidth/4;for(var i=0;i<muted.length;i++){if(muted[i]){this._drawX(ctx,{x:x+i*fretBox.stringSpace,y:y},fretBox);}}},_drawX:function(ctx,pos,fretBox){pos.x-=fretBox.xWidth/2;pos.y-=fretBox.xWidth/2;ctx.beginPath();ctx.moveTo(pos.x,pos.y);ctx.lineTo(pos.x+fretBox.xWidth,pos.y+fretBox.xWidth);ctx.moveTo(pos.x,pos.y+fretBox.xWidth);ctx.lineTo(pos.x+fretBox.xWidth,pos.y);ctx.strokeStyle=ukeGeeks.settings.colors.xStroke;ctx.lineWidth=fretBox.xStroke;ctx.stroke();ctx.closePath();},_getFirstFret:function(dots){var maxF=5;for(var i=0;i<dots.length;i++){if(dots[i].fret>maxF)
maxF=dots[i].fret;}
return maxF-4;}}
;ukeGeeks.chordParser=function(){};ukeGeeks.chordParser.prototype={chords:[],init:function(){},parse:function(text){this.chords=this._findChords(text);text=this._encloseChords(text,this.chords);text=this._packChords(text);return text;},getChords:function(){return this.chords;},_findChords:function(text){var re=/\[(.+?)]/img;var m=text.match(re);if(!m)return[];var chords=[];var found;for(var i=0;i<m.length;i++){found=false;for(var j=0;j<chords.length;j++){if(chords[j]==m[i]){found=true;break;}}
if(!found){chords.push(m[i]);}}
for(var j in chords){chords[j]=chords[j].replace('[','').replace(']','');}
return chords;},_encloseChords:function(text,chords){var openBracket=ukeGeeks.settings.opts.retainBrackets?'[':' ';var closeBracket=ukeGeeks.settings.opts.retainBrackets?']':' ';for(var i in chords){do{}
while(text.length!=(text=text.replace('['+chords[i]+']','<code data-chordName="'+chords[i]+'"><strong>'+openBracket+'<em>'+chords[i]+'</em>'+closeBracket+'</strong></code>')).length);}
return text;},_packChords:function(text){if(ukeGeeks.settings.inlineDiagrams){var re=/(<\/strong><\/code>)[  ]*(<code data-chordName="[^"]*"><strong>)/ig;return text.replace(re,'$1<span class="ugsInlineSpacer">&nbsp;</span>$2');}
else{var re=/<\/strong><\/code>[  ]*<code data-chordName="[^"]*"><strong>/ig;return text.replace(re,' ');}}}
;ukeGeeks.cpmParser=function(){};ukeGeeks.cpmParser.prototype={runaway:30,columnCount:1,hasChords:false,init:function(){},parse:function(text){var song=new ukeGeeks.data.song;text=this._stripHtml(text);var songDom=this._domParse(text);songDom=this._parseInstr(songDom);songDom=this._parseSimpleInstr(songDom);songDom=this._markChordLines(songDom);song.body=this._export(songDom);if(this.columnCount>1){song.body='<div class="'+this.classNames.ColumnWrap+' '+this.classNames.ColumnCount+this.columnCount+'">'
+'<div class="'+this.classNames.Column+'">'
+song.body
+'</div>'
+'</div>';}
song.hasChords=this.hasChords;var tmp;tmp=this._getInfo(songDom,this.blockTypeEnum.Title);if(tmp.length>0){song.title=tmp[0];}
tmp=this._getInfo(songDom,this.blockTypeEnum.Artist);if(tmp.length>0){song.artist=tmp[0];}
tmp=this._getInfo(songDom,this.blockTypeEnum.Subtitle);if(tmp.length>0){song.st=tmp[0];}
if(tmp.length>1){song.st2=tmp[1];}
tmp=this._getInfo(songDom,this.blockTypeEnum.Album);if(tmp.length>0){song.album=tmp[0];}
tmp=this._getInfo(songDom,this.blockTypeEnum.UkeGeeksMeta);if(tmp.length>0){song.ugsMeta=tmp;}
tmp=this._getInfo(songDom,this.blockTypeEnum.ChordDefinition);if(tmp.length>0){for(var i in tmp){song.defs.push(ukeGeeks.chordImport.runLine('{define: '+tmp[i]+'}'));}}
return song;},regEx:{blocks:/\s*{\s*(start_of_tab|sot|start_of_chorus|soc|end_of_tab|eot|end_of_chorus|eoc)\s*}\s*/im,tabBlock:/\s*{\s*(start_of_tab|sot)\s*}\s*/im,chorusBlock:/\s*{\s*(start_of_chorus|soc)\s*}\s*/im},classNames:{Comment:'ugsComment',Tabs:'ugsTabs',Chorus:'ugsChorus',PreChords:'ugsChords',PrePlain:'ugsPlain',NoLyrics:'ugsNoLyrics',ColumnWrap:'ugsWrap',ColumnCount:'ugsColumnCount',Column:'ugsColumn',NewPage:'ugsNewPage'},blockTypeEnum:{TextBlock:1,ChorusBlock:2,TabBlock:3,Comment:101,Title:102,Subtitle:103,Album:104,ChordDefinition:105,UkeGeeksMeta:106,ColumnBreak:107,Artist:108,NewPage:109,ChordText:201,PlainText:202,ChordOnlyText:203,Undefined:666},_getBlockType:function(line){if(this.regEx.chorusBlock.test(line)){return this.blockTypeEnum.ChorusBlock;}
else if(this.regEx.tabBlock.test(line)){return this.blockTypeEnum.TabBlock;}
return this.blockTypeEnum.TextBlock;},_export:function(song){var nl="\n";var html='';for(var i=0;i<song.length;i++){if(song[i].type==this.blockTypeEnum.Comment){html+='<h6 class="'+this.classNames.Comment+'">'+song[i].lines[0]+'</h6>'+nl;}
else if(song[i].type==this.blockTypeEnum.NewPage){html+='<hr class="'+this.classNames.NewPage+'" />'+nl;}
else if((song[i].type==this.blockTypeEnum.ChordText)||(song[i].type==this.blockTypeEnum.PlainText)||(song[i].type==this.blockTypeEnum.ChordOnlyText)){var myClass=(song[i].type==this.blockTypeEnum.PlainText)?this.classNames.PrePlain:this.classNames.PreChords;if(song[i].type==this.blockTypeEnum.ChordOnlyText){myClass+=' '+this.classNames.NoLyrics;}
var myType=song[i].type;var lastType=((i-1)>=0)?song[i-1].type:this.blockTypeEnum.Undefined;var nextType=((i+1)<song.length)?nextType=song[i+1].type:this.blockTypeEnum.Undefined;html+=(lastType!=myType)?('<pre class="'+myClass+'">'):nl;html+=song[i].lines[0];html+=(nextType!=myType)?('</pre>'+nl):'';}
else if(song[i].type==this.blockTypeEnum.ChorusBlock){html+='<div class="'+this.classNames.Chorus+'">'+nl;html+=this._export(song[i].lines);html+='</div>'+nl;}
else if(song[i].type==this.blockTypeEnum.TabBlock){html+='<pre class="'+this.classNames.Tabs+'">';for(var j in song[i].lines){html+=song[i].lines[j]+nl;}
html+='</pre>'+nl;}
else if(song[i].type==this.blockTypeEnum.TextBlock){html+=this._export(song[i].lines);}
else if(song[i].type==this.blockTypeEnum.ColumnBreak){html+='</div><div class="'+this.classNames.Column+'">';}
else{}}
return html;},_echo:function(song){for(var i in song){console.log('>> '+i+'. '+song[i].type+' node, '+song[i].lines.length+' lines');for(var j in song[i].lines){console.log(song[i].lines[j]);}}},_domParse:function(text){var lines=text.split('\n');var song=[];var tmpBlk=null;var isMarker;for(var i in lines){if((lines[i].length>0)&&(lines[i][0]=='#')){continue;}
isMarker=this.regEx.blocks.test(lines[i]);if(isMarker||tmpBlk==null){if(tmpBlk!=null){song.push(tmpBlk);}
tmpBlk={type:this._getBlockType(lines[i]),lines:[]};if(!isMarker){tmpBlk.lines.push(lines[i]);}}
else{var s=ukeGeeks.toolsLite.trim(lines[i]);if(s.length>0){tmpBlk.lines.push(s);}}}
if(tmpBlk.lines.length>0){song.push(tmpBlk);}
return song;},_parseInstr:function(song){var regEx={instr:/\{[^}]+?:.*?\}/im,cmdArgs:/\{.+?:(.*)\}/gi,cmdVerb:/\{(.+?)\s*:.*\}/gi};for(var i in song){for(var j in song[i].lines){if(regEx.instr.test(song[i].lines[j])){var args=song[i].lines[j].replace(regEx.cmdArgs,'$1');var verb=song[i].lines[j].replace(regEx.cmdVerb,'$1').toLowerCase();verb=verb.replace(/\r/,'');var tmpBlk={type:'',lines:[]};switch(verb){case'title':case't':tmpBlk.type=this.blockTypeEnum.Title;break;case'artist':tmpBlk.type=this.blockTypeEnum.Artist;break;case'subtitle':case'st':tmpBlk.type=this.blockTypeEnum.Subtitle;break;case'album':tmpBlk.type=this.blockTypeEnum.Album;break;case'comment':case'c':tmpBlk.type=this.blockTypeEnum.Comment;break;case'define':tmpBlk.type=this.blockTypeEnum.ChordDefinition;break;case'ukegeeks-meta':tmpBlk.type=this.blockTypeEnum.UkeGeeksMeta;break;default:tmpBlk.type='Undefined-'+verb;break;}
tmpBlk.lines[0]=ukeGeeks.toolsLite.trim(args);song[i].lines[j]=tmpBlk;}}}
return song;},_parseSimpleInstr:function(song){var regEx={columnBreak:/\s*{\s*(column_break|colb|np|new_page)\s*}\s*/im};for(var i in song){for(var j in song[i].lines){if(regEx.columnBreak.test(song[i].lines[j])){var verb=song[i].lines[j].replace(regEx.columnBreak,'$1').toLowerCase();switch(verb){case'column_break':case'colb':this.columnCount++;song[i].lines[j]={type:this.blockTypeEnum.ColumnBreak,lines:[]};break;case'new_page':case'np':song[i].lines[j]={type:this.blockTypeEnum.NewPage,lines:[]};break;}}}}
return song;},_markChordLines:function(song){var regEx={chord:/\[(.+?)]/i,allChords:/\[(.+?)]/img};var hasChrd;var isChrdOnly;var line;for(var i in song){if(song[i].type==this.blockTypeEnum.TextBlock||song[i].type==this.blockTypeEnum.ChorusBlock){for(var j in song[i].lines){line=song[i].lines[j];if(typeof(line)=='string'){hasChrd=regEx.chord.test(line);this.hasChords=this.hasChords||hasChrd;isChrdOnly=hasChrd&&(ukeGeeks.toolsLite.trim(line.replace(regEx.allChords,'')).length<1);song[i].lines[j]={type:(isChrdOnly?this.blockTypeEnum.ChordOnlyText:(hasChrd?this.blockTypeEnum.ChordText:this.blockTypeEnum.PlainText)),lines:[line]};}}}}
return song;},_getInfo:function(song,type){var rtn=[];for(var i in song){if(song[i].type==type){rtn.push(song[i].lines[0]);}
else if(song[i].type==this.blockTypeEnum.TextBlock){for(var j in song[i].lines){if(song[i].lines[j].type==type){rtn.push(song[i].lines[j].lines[0]);}}}}
return rtn;},_stripHtml:function(text){var regEx={pre:/<\/?pre>/img,htmlComment:/<!--(.|\n)*?-->/gm};return text.replace(regEx.pre,'').replace(regEx.htmlComment,'');}};
;ukeGeeks.chordPainter=function(){var publics={};var brush=null;var errors=[];var handles=null;publics.init=function(htmlHandles){brush=new ukeGeeks.chordBrush;brush.init();handles=htmlHandles;};var ignoreMatchList=[];var ignoreChord=function(chord){for(var i=0;i<ukeGeeks.settings.commonChords.length;i++){if(chord==ukeGeeks.settings.commonChords[i]){return true;}};return false;};publics.show=function(chords){handles.diagrams.innerHTML='';errors=[];ignoreMatchList=[];for(var i=0;i<chords.length;i++){if(ukeGeeks.settings.opts.ignoreCommonChords&&ignoreChord(chords[i])){ignoreMatchList.push(chords[i]);continue;}
var c=ukeGeeks.definitions.get(chords[i]);if(!c){errors.push(chords[i]);continue;}
brush.plot(handles.diagrams,c,ukeGeeks.settings.fretBox);}};publics.showInline=function(chords){var e=handles.text.getElementsByTagName('code');if(e.length<1)return;for(var i=0;i<chords.length;i++){var c=ukeGeeks.definitions.get(chords[i]);if(!c){continue;}
for(var j=0;j<e.length;j++){if(e[j].getAttribute('data-chordName')==c.name){brush.plot(e[j],c,ukeGeeks.settings.inlineFretBox);}}}};publics.getErrors=function(){return errors;};publics.getIgnoredChords=function(){return ignoreMatchList;};return publics;}
;ukeGeeks.tabs=function(){};ukeGeeks.tabs.prototype={init:function(){},replace:function(h){var tabBlocks=h.getElementsByTagName('pre');for(var i in tabBlocks){if(tabBlocks[i].className=='ugsTabs'){var s=tabBlocks[i].innerHTML;tabBlocks[i].innerHTML="";this.loadBlocks(s,tabBlocks[i]);}}},loadBlocks:function(text,outElement){var lns=text.split('\n');var tab=[];for(var i in lns){var s=ukeGeeks.toolsLite.trim(lns[i]);if(s.length>0){tab.push(s);}
if(tab.length==4){this.redraw(tab,outElement);tab=[];}}},redraw:function(inTabs,outElement){inTabs=(typeof(inTabs)=='string')?(inTabs.split('\n')):inTabs;if(inTabs.length<4){return;}
var tabInfo=this._readTabs(inTabs);var labelOffset=(tabInfo.hasLabels)?ukeGeeks.settings.tabs.labelWidth:0;var tabs=tabInfo.tabs;var height=(3*ukeGeeks.settings.tabs.lineSpacing)+(2*ukeGeeks.settings.tabs.dotRadius)+ukeGeeks.settings.tabs.bottomPadding;outElement=(typeof(outElement)=='string')?document.getElementById(outElement):outElement;var ctx=ukeGeeks.canvasTools.addCanvas(outElement,this._getWidth(tabs,labelOffset,false),height);var pos={x:ukeGeeks.settings.tabs.dotRadius+labelOffset,y:1+ukeGeeks.settings.tabs.dotRadius};this._drawStaff(ctx,pos,this._getWidth(tabs,labelOffset,true),ukeGeeks.settings.tabs);this._drawNotes(ctx,pos,tabs,ukeGeeks.settings.tabs);if(tabInfo.hasLabels){this._drawLabels(ctx,pos,ukeGeeks.settings.tabs);}},_readTabs:function(ukeStrings){var hasLabels=ukeStrings[3][0]=='G';if(hasLabels){this._rdTbStripLabels(ukeStrings);}
var frets=this._rdTbGetFrets(ukeStrings);var symbols=this._rdTbGetSymbols(ukeStrings);var minLength=this._rdTbGetMinLength(ukeStrings);var guide=this._rdTbGetGuide(symbols,minLength);return{tabs:this._rdTbGetPacked(frets,symbols,guide,minLength),hasLabels:hasLabels};},_getWidth:function(tabs,labelOffset,isTruncate){if(!isTruncate){return(ukeGeeks.settings.tabs.noteSpacing*tabs[0].length)+labelOffset+ukeGeeks.settings.tabs.dotRadius;}
var len=tabs[0].length;var plusDot=ukeGeeks.settings.tabs.dotRadius;if(tabs[0][len-1]=='|'){len-=1;plusDot=0;}
return ukeGeeks.settings.tabs.noteSpacing*len+labelOffset+plusDot;},_rdTbStripLabels:function(ukeStrings){for(var i=0;i<4;i++){ukeStrings[i]=ukeStrings[i].substr(1);}},_rdTbGetFrets:function(ukeStrings){var reInts=/([0-9]+)/g;var frets=[];for(var i=0;i<4;i++){frets[i]=ukeStrings[i].match(reInts);}
return frets;},_rdTbGetSymbols:function(ukeStrings){var reDoubles=/([0-9]{2})/g;var reSingle=/([0-9])/g;var symbols=[];for(var i=0;i<4;i++){symbols[i]=ukeStrings[i].replace(reDoubles,'-*');symbols[i]=symbols[i].replace(reSingle,'*');}
return symbols;},_rdTbGetMinLength:function(ukeStrings){var minLength=10000;for(var i=0;i<4;i++){minLength=(ukeStrings[i].length<minLength)?ukeStrings[i].length:minLength;}
return minLength;},_rdTbGetGuide:function(symbols,minLength){var guide='';for(var i=0;i<minLength;i++){if(symbols[0][i]=='|'){guide+='|';}
else{guide+=((symbols[0][i]=='*')||(symbols[1][i]=='*')||(symbols[2][i]=='*')||(symbols[3][i]=='*'))?'*':'-';}}
var reDash=/--/g;guide=guide.replace(reDash,'- ');reDash=/ -/g;var lastGuide=guide;while(true){guide=guide.replace(reDash,'  ');if(guide==lastGuide){break;}
lastGuide=guide;}
return guide;},_rdTbGetPacked:function(frets,symbols,guide,minLength){var packed=[[],[],[],[]];var chrNote='';for(var j=0;j<4;j++){var p=0;var f=0;for(var i=0;i<minLength;i++){if(guide[i]!=' '){if(symbols[j][i]=='*'){chrNote=frets[j][f];f++;}
else{chrNote=((guide[i]=='|'))?'|':'-';}
packed[j][p]=chrNote;p++;}}}
return packed;},_drawStaff:function(ctx,pos,length,settings){var offset=settings.lineWidth/2;var x=pos.x+offset;var y=pos.y+offset;ctx.beginPath();for(var i=0;i<4;i++){ctx.moveTo(x,y);ctx.lineTo(x+length,y);y+=settings.lineSpacing;}
ctx.strokeStyle=settings.lineColor;ctx.lineWidth=settings.lineWidth;ctx.stroke();ctx.closePath();},_drawNotes:function(ctx,pos,tabs,settings){var c;var center={x:0,y:pos.y};for(var i in tabs){if(i>3)return;center.x=pos.x;for(var j in tabs[i]){c=tabs[i][j];if(c=='|'){var jnum=parseInt(j,10);var heavy=(((jnum+1)<(tabs[i].length-1))&&(tabs[i][jnum+1]=='|'))||((jnum==(tabs[i].length-1))&&(tabs[i][jnum-1]=='|'));this._drawMeasure(ctx,{x:center.x,y:pos.y},settings,heavy);}
else if(!isNaN(c)){ukeGeeks.canvasTools.drawDot(ctx,center,settings.dotRadius,settings.dotColor);ukeGeeks.canvasTools.drawText(ctx,{x:center.x,y:(center.y+0.5*settings.dotRadius)},c,settings.textFont,settings.textColor);}
center.x+=settings.noteSpacing;}
center.y+=settings.lineSpacing;}},_drawMeasure:function(ctx,pos,settings,heavy){var offset=settings.lineWidth/2;ctx.beginPath();ctx.moveTo(pos.x+offset,pos.y);ctx.lineTo(pos.x+offset,pos.y+3*settings.lineSpacing);ctx.strokeStyle=settings.lineColor;ctx.lineWidth=(heavy?4.5:1)*settings.lineWidth;ctx.stroke();ctx.closePath();},_drawLabels:function(ctx,pos,settings){var labels=ukeGeeks.settings.tuning.slice(0).reverse();for(var i=0;i<4;i++){ukeGeeks.canvasTools.drawText(ctx,{x:1,y:(pos.y+(i+0.3)*settings.lineSpacing)},labels[i],settings.labelFont,settings.lineColor,'left');}}}
;ukeGeeks.overlapFixer=(function(){var _publics={};var checkOverlap=function(a,b){if(a.top!=b.top){return false;}
if((b.left>a.right)||(b.right<a.left)){return false;}
if((b.left>a.left)&&(b.left<a.right)){return true;}
if((b.right>a.left)&&(b.right<a.right)){return true;}
return false;};var getBox=function(ele){var box=getOffsets(ele);box.width=getWidth(ele);var em=ele.getElementsByTagName('em')[0];if(em){var emWidth=getWidth(em);if(emWidth>box.width){box.width=emWidth+2;}}
box.right=box.left+box.width;return box;};var getWidth=function(ele){if(typeof ele.clip!=="undefined"){return ele.clip.width;}
return(ele.style.pixelWidth)?ele.style.pixelWidth:ele.offsetWidth;};var getOffsets=function(ele){var box={top:0,left:0,right:0,width:0};while(ele&&!isNaN(ele.offsetLeft)&&!isNaN(ele.offsetTop)){box.left+=ele.offsetLeft-ele.scrollLeft;box.top+=ele.offsetTop-ele.scrollTop;ele=ele.offsetParent;}
return box;};var checkChords=function(codeA,codeB){var strongA=codeA.getElementsByTagName('strong')[0];var strongB=codeB.getElementsByTagName('strong')[0];if(!strongA||!strongB){return;}
var boxA=getBox(strongA);var boxB=getBox(strongB);if(checkOverlap(boxA,boxB)){var width=boxA.right-boxB.left+1;codeA.style.paddingRight=(width<1?1:width)+'px';}};_publics.Fix=function(ele){var elements=ele.getElementsByTagName('code');for(var i=0;i<elements.length;i++){elements[i].style.paddingRight='0px';}
for(var i=0;i<(elements.length-1);i++){checkChords(elements[i],elements[i+1]);}};return _publics;})();
;ukeGeeks.scriptasaurus=new function(){this.init=function(isIeFamily){ukeGeeks.settings.environment.isIe=isIeFamily;ukeGeeks.definitions.useInstrument(ukeGeeks.definitions.instrument.sopranoUke);if(ukeGeeks.settings.defaultInstrument!=ukeGeeks.definitions.instrument.sopranoUke){ukeGeeks.definitions.useInstrument(ukeGeeks.settings.defaultInstrument);}};this.run=function(){var handles=_getHandlesFromId();if(!handles||!handles.diagrams||!handles.text||!handles.wrap){return null;}
_errList=[];var song=_runSong(handles);showErrors(_errList[0]);return song;};this.runByClasses=function(){var songs=[];var songWraps=ukeGeeks.toolsLite.getElementsByClass(ukeGeeks.settings.wrapClasses.wrap);for(var i=0;i<songWraps.length;i++){var handles=_getHandlesFromClass(songWraps[i]);if(handles==null){continue;}
songs.push(_runSong(handles));}
return songs;};this.setTuningOffset=function(offset){ukeGeeks.definitions.useInstrument(offset);};var _errList=[];var _runSong=function(handles){var cpm=new ukeGeeks.cpmParser;cpm.init();var song=cpm.parse(handles.text.innerHTML);ukeGeeks.definitions.replace(song.defs);var chrdPrsr=new ukeGeeks.chordParser;chrdPrsr.init();handles.text.innerHTML=chrdPrsr.parse(song.body);song.chords=chrdPrsr.getChords();var painter=new ukeGeeks.chordPainter;painter.init(handles);painter.show(song.chords);if(ukeGeeks.settings.inlineDiagrams){ukeGeeks.toolsLite.addClass(handles.wrap,'ugsInlineDiagrams');painter.showInline(song.chords);}
var tabs=new ukeGeeks.tabs;tabs.init();tabs.replace(handles.text);_errList.push(painter.getErrors());var container=handles.wrap;if(container){if(!song.hasChords){ukeGeeks.toolsLite.addClass(container,'ugsNoChords');}
else{ukeGeeks.toolsLite.removeClass(container,'ugsNoChords');}}
if(ukeGeeks.settings.opts.autoFixOverlaps){ukeGeeks.overlapFixer.Fix(handles.text);}
return song;};var showErrors=function(errs){if(errs.length<1){return;}
var s='';for(var i=0;i<errs.length;i++){s+=(s.length>0)?', ':'';s+=errs[i];}
//alert('Forgive me, but I don\'t know the following chords: '+s);
};var _getHandlesFromClass=function(wrap){var diagrams=ukeGeeks.toolsLite.getElementsByClass(ukeGeeks.settings.wrapClasses.diagrams,wrap);var text=ukeGeeks.toolsLite.getElementsByClass(ukeGeeks.settings.wrapClasses.text,wrap);if((diagrams==undefined)||(diagrams.length<1)||(text==undefined)||(text.length<1)){return null;}
return new ukeGeeks.data.htmlHandles(wrap,diagrams[0],text[0]);};var _getHandlesFromId=function(){return new ukeGeeks.data.htmlHandles(document.getElementById(ukeGeeks.settings.ids.container),document.getElementById(ukeGeeks.settings.ids.canvas),document.getElementById(ukeGeeks.settings.ids.songText));};}